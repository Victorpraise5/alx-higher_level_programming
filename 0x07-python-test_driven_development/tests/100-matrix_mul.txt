===================================
 The ``100-matrix_mul`` module
===================================

Testing ``matrix_mul`` function

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Testing cases:

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2, 3], [3, 4, 6]], [[1, 2, 4], [3, 4, 7], [3, 4, 7]])
[[16, 22, 39], [33, 46, 82]]

>>> matrix_mul([[-1, -4.5, 8], [-4, 45, 0]], [[-3, 6, 6.7], [3, -78, 89], [5, 2, 1]])
[[29.5, 361.0, -399.2], [147, -3534, 3978.2]]

>>> matrix_mul("I am no a list", [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul( [[1, 2], [3, 4]], "I am no a list")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul( ["I am no a list", [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], ["I am no a list", 3.2])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[1, "A"]], [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2]], [[3, "A"], [5, 6]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1], [1, 2]], [[3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 3], [1, 2]], [[3], [5, 6]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2, 3]], [[5, 6], [7, 8]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
[[10.5, 15.5, 18.5], [22.5, 33.5, 40.5]]

>>> ms = __import__("100-matrix_mul").__doc__
>>> len(ms) > 1
True

>>> fs = __import__("100-matrix_mul").__doc__
>>> len(fs) > 1
True

>>> matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
